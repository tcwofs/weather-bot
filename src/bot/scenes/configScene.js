const Scene = require('telegraf/scenes/base');
const { getMainKeyboard, getConfigKeyboard } = require('../keyboards');

const config = new Scene('configScene');

config.enter(({ i18n, replyWithHTML, session }) => replyWithHTML(`${i18n.t('config')}`, getConfigKeyboard(i18n, session.units)));
config.hears(['‚¨ÖÔ∏èBack', '‚¨ÖÔ∏è–í–µ—Ä–Ω—É—Ç—å—Å—è', '/cancel'], ({ scene }) => scene.enter('mainScene'));
config.hears(['üè¢Set city', 'üè¢–£–∫–∞–∑–∞—Ç—å –≥–æ—Ä–æ–¥'], ({ scene }) => scene.enter('setCityScene'));
config.hears(['üïêSet notification', 'üïê–£—Å—Ç. –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ'], ({ scene }) => scene.enter('setNotifScene'));
config.hears(['‚ùåDelete notification', '‚ùå–£–¥. –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ'], ({ scene }) => scene.enter('delNotifScene'));
config.hears(['‚ÑπÔ∏èAbout', '‚ÑπÔ∏è–û –ø—Ä–æ–µ–∫—Ç–µ'], ({ scene }) => scene.enter('aboutScene'));
config.hears(/üßÆ.+/, ({ session, replyWithHTML, i18n }) => {
  session.units === 'metric' ? (session.units = 'imperial') : (session.units = 'metric');
  replyWithHTML(`${i18n.t('unit_changed')} ${session.units === 'metric' ? '¬∞C' : '¬∞F'}`, getConfigKeyboard(i18n, session.units));
});
config.on('message', ({ i18n, replyWithHTML }) => replyWithHTML(`${i18n.t('config')}`));
config.leave(({ i18n, replyWithHTML }) => replyWithHTML('‚¨ÖÔ∏è', getMainKeyboard(i18n)));

module.exports = {
  config,
};
